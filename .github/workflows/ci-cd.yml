name: CI/CD para produção

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clona o repositório
        uses: actions/checkout@v4

      - name: Instala o Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instala as dependências
        run: npm install

      - name: Faz build
        run: npm run build

      - name: Arquiva o build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Baixa o build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/

      - name: Sobe o código para a VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          APP_PATH: ${{ secrets.APP_PATH }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $VPS_HOST >> ~/.ssh/known_hosts

          # Primeiro, envia os arquivos de build para a VPS
          rsync -avz --delete dist/ $VPS_USER@$VPS_HOST:$APP_PATH/dist/

          # Conecta na VPS e faz o deploy
          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << EOF
            cd $APP_PATH

            # Puxa as mudanças do git
            git pull origin master

            # Instala apenas pacotes de produção (se mudar algo no package.json)
            npm install --production

            # Reinicia o app com PM2 (ou sobe se não estiver rodando)
            pm2 restart app || pm2 start npm --name app -- start
          EOF